<?php

namespace frontend\widgets;
use frontend\models\Posts;
use yii\base\Widget;
use common\models\Post;
use common\models\Constants;

/**
 * Created by PhpStorm.
 * User: Shu
 * Date: 18/02/17
 * Time: 10:25 PM
 */
class RecentPostWidget extends Widget
{
    /**
     * @var array
     * Default option settings.
     */
    public $options = [];
    public $enableCache = Constants::ENABLE_CACHE;
    private $post_model;
    private $maxLimit = 10;

    private $default = [
        'count' => 5,
        'displayThumb' => true,
        'containerClass' => "",
        'imageContainerClass' => "recent-image",
        'contentContainerClass' => "",
        'showDate' => true,
        'showAuthor' => true
    ];

    /**
     * Initialize the models and the properties.
     */
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $db_model = new Posts();
        static $cachedModel;

        foreach ($this->default as $key=>$value){
            if (!isset($this->options[$key])){
                $this->options[$key] = $value;
            }
        }

        if (!$cachedModel){
            $cachedModel = $db_model->getSetRecentPosts([
                'limit' => ($this->options['count'] > $this->maxLimit) ? $this->options['count'] : $this->maxLimit,
                'sort' => 'created_at DESC, title',
            ]);
        }

        $this->post_model = $cachedModel;
    }

    public function run()
    {
        $post_array = [];
        for ($i=0; $i<$this->options['count'];$i++){
            $post = $this->post_model[$i];
            if ($post){
                $post_array [] = Posts::getPostInformation($post);
            }
        }

        echo $this->render('recent_post.twig',[
//            'post_model'=>$this->post_model,
            'posts'=>$post_array,
            'options' => $this->options
        ]);
    }
}